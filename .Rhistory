install.packages("parallel")
library(sqldf)
install.packages("sqldf")
library(sqldf)
S <- read.csv.sql('C:/Users/Linh B Ngo/OneDrive/Documents/Papers/2016/Book Chapter/Data/Pasadena/Pasadena/08a WorkZone (SQL format)/pasadena_globals_wz_schedule_Sample.sql', sql="SELECT * FROM wz_schedule")
install.packages("gsubfn")
install.packages("gsubfn")
S <- read.csv.sql('C:/Users/Linh B Ngo/OneDrive/Documents/Papers/2016/Book Chapter/Data/Pasadena/Pasadena/08a WorkZone (SQL format)/pasadena_globals_wz_schedule_Sample.sql', sql="SELECT * FROM wz_schedule")
install.packages("ProjectTemplate")
library(ProjectTemplate)
?sql.reader
sql.reader(pasadena_globals_wz_schedule_Sample.sql,'C:/Users/Linh B Ngo/OneDrive/Documents/Papers/2016/Book Chapter/Data/Pasadena/Pasadena/08a WorkZone (SQL format)/pasadena_globals_wz_schedule_Sample.sql', wz_schedule)
library(ProjectTemplate)
sql.reader
sql.reader()
sqlreader
sqlDumpConn <- file("C:/Users/Linh B Ngo/OneDrive/Documents/Papers/2016/Book Chapter/Data/Pasadena/Pasadena/08a WorkZone (SQL format)/pasadena_globals_wz_schedule_Sample.sql", "r")
sqlLines <- readLines(sqlDumpConn)
sqlLines
?readLines
sqlLine <- readLine(sqlDumpConn)
?readLine
sqlLines <- readLines(sqlDumpConn)
length(sqlLines)
size(sqlLines)
sqlLines <- readLines(sqlDumpConn)
close(sqlDumpConn)
sqlDumpConn <- file("C:/Users/Linh B Ngo/OneDrive/Documents/Papers/2016/Book Chapter/Data/Pasadena/Pasadena/08a WorkZone (SQL format)/pasadena_globals_wz_schedule_Sample.sql", "r")
sqlLines <- readLines(sqlDumpConn)
length(sqlLines)
sqlLines[1]
sqlLines[2]
sqlLines[3]
sqlLines[3][1:2]
sqlLines[3][1]
substr(sqlLines[3],1,2)
sqlDumpConn <- file("C:/Users/Linh B Ngo/OneDrive/Documents/Papers/2016/Book Chapter/Data/Pasadena/Pasadena/08a WorkZone (SQL format)/pasadena_globals_wz_schedule_Sample.sql", "r")
sqlLines <- readLines(sqlDumpConn)
sqlValid <- ""
for (i in 1:length(sqlLines)){
tmpLine <- gsub
if (substr(tmpLine, 1, 2) != "--"){
sqlValid <- paste(sqlValid, sqlLines[i], sep="")
if (sqlValid[length(sqlValid)] == ";" ){
print(sqlValid)
sqlValid <- ""
}
}
}
close(sqlDumpConn)
for (i in 1:length(sqlLines)){
tmpLine <- gsub
if (substr(tmpLine, 1, 2) != "--"){
sqlValid <- paste(sqlValid, sqlLines[i], sep="")
if (sqlValid[length(sqlValid)] == ";" ){
print(sqlValid)
sqlValid <- ""
}
}
}
sqlValid <- ""
for (i in 1:length(sqlLines)){
tmpLine <- gsub("^\\s+|\\s+$", "", sqlLines[i])
if (substr(tmpLine, 1, 2) != "--"){
sqlValid <- paste(sqlValid, tmpLine, sep="")
if (sqlValid[length(sqlValid)] == ";" ){
print(sqlValid)
sqlValid <- ""
}
}
}
sqlValid <- ""
for (i in 1:length(sqlLines)){
tmpLine <- gsub("^\\s+|\\s+$", "", sqlLines[i])
print(tmpLine)
if (substr(tmpLine, 1, 2) != "--"){
sqlValid <- paste(sqlValid, tmpLine, sep="")
if (sqlValid[length(sqlValid)] == ";" ){
print(sqlValid)
sqlValid <- ""
}
}
}
sqlValid <- ""
for (i in 1:length(sqlLines)){
tmpLine <- gsub("^\\s+|\\s+$", "", sqlLines[i])
print(substr(tmpLine, 1, 2))
if (substr(tmpLine, 1, 2) != "--"){
sqlValid <- paste(sqlValid, tmpLine, sep="")
if (sqlValid[length(sqlValid)] == ";" ){
print(sqlValid)
sqlValid <- ""
}
}
}
sqlValid <- ""
for (i in 1:length(sqlLines)){
tmpLine <- gsub("^\\s+|\\s+$", "", sqlLines[i])
if (substr(tmpLine, 1, 2) != "--"){
sqlValid <- paste(sqlValid, tmpLine, sep="")
print(substr(tmpLine, 1, 2))
if (sqlValid[length(sqlValid)] == ";" ){
print(sqlValid)
sqlValid <- ""
}
}
}
print(sqlValid)
sqlValid[length(sqlValid)]
substr(sqlValid, length(sqlValid) - 1, length(sqlValid))
sqlValid
sqlValid[1]
length(sqlValid)
tmpLine
substr(tmpLine, 1, 2) != "--"
substr(sqlValid, length(sqlValid), length(sqlValid))
size(sqlValid)
sqlValid
length(sqlValid)
substr(sqlValid, nchar(sqlValid), nchar(sqlValid))
sqlValid <- ""
for (i in 1:length(sqlLines)){
tmpLine <- gsub("^\\s+|\\s+$", "", sqlLines[i])
if (substr(tmpLine, 1, 2) != "--"){
sqlValid <- paste(sqlValid, tmpLine, sep="")
print(substr(tmpLine, 1, 2))
if (substr(sqlValid, nchar(sqlValid), nchar(sqlValid)) == ";" ){
print(sqlValid)
sqlValid <- ""
}
}
}
sqlValid <- ""
for (i in 1:length(sqlLines)){
tmpLine <- gsub("^\\s+|\\s+$", "", sqlLines[i])
if (substr(tmpLine, 1, 2) != "--"){
sqlValid <- paste(sqlValid, tmpLine, sep="")
#    print(substr(tmpLine, 1, 2))
if (substr(sqlValid, nchar(sqlValid), nchar(sqlValid)) == ";" ){
print(sqlValid)
sqlValid <- ""
}
}
}
substr(sqlValid, nchar(sqlValid)-2, nchar(sqlValid)-1)
sqlValid <- ""
for (i in 1:length(sqlLines)){
tmpLine <- gsub("^\\s+|\\s+$", "", sqlLines[i])
if (substr(tmpLine, 1, 2) != "--"){
sqlValid <- paste(sqlValid, tmpLine, sep="")
#    print(substr(tmpLine, 1, 2))
if (substr(sqlValid, nchar(sqlValid), nchar(sqlValid)) == ";" ){
if (substr(sqlValid, 1, 2) != "/*" &
substr(sqlValid, nchar(sqlValid)-2, nchar(sqlValid)-1) != "*/" ){
print(sqlValid)
sqlValid <- ""
}
}
}
}
sqlValid <- ""
for (i in 1:length(sqlLines)){
tmpLine <- gsub("^\\s+|\\s+$", "", sqlLines[i])
if (substr(tmpLine, 1, 2) != "--"){
sqlValid <- paste(sqlValid, tmpLine, sep="")
#    print(substr(tmpLine, 1, 2))
if (substr(sqlValid, nchar(sqlValid), nchar(sqlValid)) == ";" ){
if (substr(sqlValid, 1, 2) != "/*" &
substr(sqlValid, nchar(sqlValid)-2, nchar(sqlValid)-1) != "*/" ){
print(sqlValid)
}
sqlValid <- ""
}
}
}
strsplit("test things", " ")
as.character(strsplit("test things", " "))
strsplit("test things", " ")[[1]]
strsplit("test things", " ")[[1]][2]
class(strsplit("test things", " ")[[1]])
?strsplit
class(strsplit("test things", " ", fixed=TRUE)[[1]])
lass(strsplit("test things", " ", fixed=TRUE)[[1]]
}
strsplit("test things", " ", fixed=TRUE)[[1]]
x <- 1
y <- 2
print (x,y)
install.packages(c('repr', 'IRdisplay', 'evaluate', 'crayon', 'pbdZMQ', 'devtools', 'uuid', 'digest'))
devtools::install_github('IRkernel/IRkernel')
IRkernel::installspec(user = FALSE)
fahr_to_kelvin <- function(temp) {
kelvin <- ((temp - 32) * (5 / 9)) + 273.15
return (kelvin)
}
fahr_to_kelvin(32)
fahr_to_kelvin(212)
installpackages("RQDA")
install.packages("RQDA")
library(RQDA)
RQDA()
library(RQDA)
getwd()
setwd('C:\Users/Linh B Ngo/Documents/CITI/Consulting/Architecture/')
df <- read.csv('CITI/Consulting/Architecture/S03_Time-based.csv')
colnames(df)
rn1_locations <- df$RNcirculatinglocation1
unique(rn1_locations)
unique(df$Phase)
df <- filter(df, df$Phase != 'Turnaround')
df <- read.csv('CITI/Consulting/Architecture/S03_Time-based.csv')
df <- filter(df, as.character(df$Phase) != 'Turnaround')
df <- read.csv('CITI/Consulting/Architecture/S03_Time-based.csv',stringsAsFactors = FALSE)
df <- filter(df, df$Phase != 'Turnaround')
df <- read.csv('CITI/Consulting/Architecture/S03_Time-based.csv',stringsAsFactors = FALSE)
unique(df$Phase)
df <- subset(df, df$Phase != 'Turnaround')
rn1_locations <- unique(as.character(df$RNcirculatinglocation1))
unique(df$SFD)
unique(df$SFD_VARS_RN_circulating)
df <- subset(df, df$SFD_VARS_RN_circulating != '')
View(df)
unique(df$SFD)
df <- subset(df, df$SFD != 'Usability')
df <- subset(df, df$SFD != 'Interruptions')
require(dplyr)
install.packages('dplyr')
library(dplyr)
sum(c(1,2,3))
location_sfd <- df %>%
mutate(layout = ifelse(SFD == 'Layout',1,0),
env_hazard = ifelse(SFD == 'Environmental Hazard',1,0)) %>%
group_by(RNcirculatinglocation1) %>%
summarize(layout_count = sum(layout),
env_hazard_count = sum(env_hazard))
View(location_sfd)
View(df)
tmp <- as.data.frame(loc=df$RNcirculatinglocation1,sfd=df$SFD)
tmp <- data.frame(loc=df$RNcirculatinglocation1,sfd=df$SFD)
subset(tmp, tmp$loc = 'Anes Workstation')
subset(tmp, tmp$loc == 'Anes Workstation')
location_sfd <- df %>%
mutate(layout = ifelse(SFD == 'Layout',1,0),
env_hazard = ifelse(SFD == 'Environmental Hazard',1,0)) %>%
group_by(RNcirculatinglocation1) %>%
summarize(layout_count = sum(layout),
env_hazard_count = sum(env_hazard)) %>%
mutate(total = layout_count + env_hazard_count)
View(location_sfd)
colnames(df)
df_raw <- read.csv('CITI/Consulting/Architecture/S03_Time-based.csv',stringsAsFactors = FALSE)
unique(df_raw$RNcirculating1)
df_patient <- df %>% filter(RNcirculating1 == 'Patient (p)')
View(df_patient)
df_patient <- df_raw %>% filter(RNcirculating1 == 'Patient (p)')
unique(df_patient$RNcirculatingmodifier1)
setwd("~/Workspace/workshop-r-intro-data-science")
